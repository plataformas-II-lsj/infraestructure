name: Deploy Infrastructure and Kubernetes Resources to Main

on:
  push:
    branches: [ main ]

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    defaults:
      run:
        working-directory: terraform/
    outputs:
      kube_config_b64: ${{ steps.apply.outputs.kube_config_b64 }}
      acr_login_server: ${{ steps.apply.outputs.acr_login_server }}
      key_vault_uri: ${{ steps.apply.outputs.key_vault_uri }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        id: check
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.8.3"

      - name: Check if Azure credentials are set
        run: |
          echo "Variables de entorno ARM configuradas desde secretos individuales."
          echo "ARM_CLIENT_ID is set: $(test -n "$ARM_CLIENT_ID" && echo true || echo false)"
          echo "ARM_SUBSCRIPTION_ID is set: $(test -n "$ARM_SUBSCRIPTION_ID" && echo true || echo false)"
          echo "ARM_TENANT_ID is set: $(test -n "$ARM_TENANT_ID" && echo true || echo false)"

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve
          terraform output -raw kube_config_b64 > kubeconfig.b64
          terraform output -raw acr_login_server > acr_login.txt
          terraform output -raw key_vault_uri > keyvault.txt

      - name: Export Terraform Outputs to ENV
        run: |
          echo "KUBE_CONFIG_B64=$(cat kubeconfig.b64)" >> $GITHUB_ENV
          echo "ACR_LOGIN_SERVER=$(cat acr_login.txt)" >> $GITHUB_ENV
          echo "KEY_VAULT_URI=$(cat keyvault.txt)" >> $GITHUB_ENV


  deploy_k8s:
    runs-on: ubuntu-latest
    needs: deploy_infra
    defaults:
      run:
        working-directory: k8s/
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl using Terraform Output
        run: |
          echo "Configuring kubectl..."
          mkdir -p ${HOME}/.kube
          echo "$KUBE_CONFIG_B64" | base64 -d > ${HOME}/.kube/config
          chmod 600 ${HOME}/.kube/config
          echo "KUBECONFIG=${HOME}/.kube/config" >> $GITHUB_ENV
          echo "Kubectl context:"
          kubectl config get-contexts
          echo "Current context:"
          kubectl config current-context

      - name: kubectl Apply - Deployments
        run: |
          kubectl apply -f deployments/

      - name: kubectl Apply - HPA
        run: |
          kubectl apply -f hpa/

      - name: kubectl Apply - Services
        run: |
          kubectl apply -f services/