name: Deploy Infrastructure and Kubernetes Resources to Main

on:
  push:
    branches: [ main ]

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/
    outputs:
      kube_config: ${{ steps.apply.outputs.kube_config }}
      acr_login_server: ${{ steps.apply.outputs.acr_login_server }}
      key_vault_uri: ${{ steps.apply.outputs.key_vault_uri }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.8.3"

      - name: Set Azure authentication environment variables
        run: |
          echo "Creating azure-credentials.json..."
          echo "${{ secrets.AZURE_CREDENTIALS }}" > azure-credentials.json
          # Optional: Add a step to view the file content for debugging
          echo "--- azure-credentials.json content ---"
          cat azure-credentials.json
          echo "--------------------------------------"
          echo "ARM_CLIENT_ID=$(jq -r .clientId azure-credentials.json)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r .clientSecret azure-credentials.json)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r .subscriptionId azure-credentials.json)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r .tenantId azure-credentials.json)" >> $GITHUB_ENV
          echo "Azure environment variables set."
        shell: bash {0}

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve
          echo "kube_config=$(terraform output -raw kube_config)" >> $GITHUB_OUTPUT
          echo "acr_login_server=$(terraform output -raw acr_login_server)" >> $GITHUB_OUTPUT
          echo "key_vault_uri=$(terraform output -raw key_vault_uri)" >> $GITHUB_OUTPUT

  deploy_k8s:
    runs-on: ubuntu-latest
    needs: deploy_infra
    defaults:
      run:
        working-directory: k8s/
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest' # Or a specific version like '1.24.0'

      - name: Configure kubectl using Terraform Output
        env:
          KUBE_CONFIG_DATA: ${{ needs.deploy_infra.outputs.kube_config }}
        run: |
          echo "Configuring kubectl..."
          mkdir -p ${HOME}/.kube
          echo "${KUBE_CONFIG_DATA}" > ${HOME}/.kube/config
          chmod 600 ${HOME}/.kube/config
          echo "KUBECONFIG=${HOME}/.kube/config" >> $GITHUB_ENV
          echo "Kubectl context:"
          kubectl config get-contexts
          echo "Current context:"
          kubectl config current-context

      - name: kubectl Apply - Deployments
        run: |
          kubectl apply -f deployments/

      - name: kubectl Apply - HPA
        run: |
          kubectl apply -f hpa/

      - name: kubectl Apply - Services
        run: |
          kubectl apply -f services/