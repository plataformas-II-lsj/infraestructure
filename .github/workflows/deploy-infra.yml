name: Deploy Infrastructure and Kubernetes Resources to Main

on:
  push:
    branches: [ main ]

jobs:
  deploy_infra:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID:       ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET:   ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID:       ${{ secrets.AZURE_TENANT_ID }}
    defaults:
      run:
        working-directory: terraform/
    # Sólo exportamos los outputs cortos como outputs de job
    outputs:
      acr_login_server: ${{ steps.export_outputs.outputs.acr_login_server }}
      key_vault_uri:    ${{ steps.export_outputs.outputs.key_vault_uri }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.8.3"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: |
          terraform apply -auto-approve

          # 1) Creamos los archivos con los outputs
          terraform output -raw kube_config_b64    > kubeconfig.b64
          terraform output -raw acr_login_server   > acr_login.txt
          terraform output -raw key_vault_uri      > keyvault.txt

      - name: Upload kubeconfig artifact
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig-b64
          path: kubeconfig.b64

      - name: Export Terraform Outputs
        id: export_outputs
        run: |
          # Sólo los valores cortos los enviamos como outputs de job
          echo "acr_login_server=$(cat acr_login.txt)" >> $GITHUB_OUTPUT
          echo "key_vault_uri=$(cat keyvault.txt)"    >> $GITHUB_OUTPUT

  deploy_k8s:
    runs-on: ubuntu-latest
    needs: deploy_infra
    environment: production
    defaults:
      run:
        working-directory: k8s/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download kubeconfig artifact
        uses: actions/download-artifact@v3
        with:
          name: kubeconfig-b64
          path: ./

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Configure kubectl using Terraform Output
        run: |
          echo "Configuring kubectl..."
          mkdir -p ${HOME}/.kube
          # Decodificamos el archivo base64 que trajimos como artifact
          base64 -d kubeconfig.b64 > ${HOME}/.kube/config
          chmod 600 ${HOME}/.kube/config
          echo "KUBECONFIG=${HOME}/.kube/config" >> $GITHUB_ENV

          echo "Kubectl contexts:"  
          kubectl config get-contexts  
          echo "Current context:"  
          kubectl config current-context

      - name: kubectl Apply - Deployments
        run: kubectl apply -f deployments/

      - name: kubectl Apply - HPA
        run: kubectl apply -f hpa/

      - name: kubectl Apply - Services
        run: kubectl apply -f services/